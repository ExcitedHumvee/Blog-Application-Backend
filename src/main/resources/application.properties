security.key.private=classpath:private_key.pem
security.key.public=classpath:public_key.pem

# Use MySQL database
#In a database connection pool, connections are created and reused rather than opening and closing a new connection for each database interaction. The max-lifetime property sets the maximum amount of time (in milliseconds) that a connection is allowed to be in use. After this time has passed, the connection will be closed and, if necessary, a new connection will be opened when needed. lifetime in milliseconds
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://sql12.freemysqlhosting.net:3306/sql12653752
spring.datasource.username=sql12653752
spring.datasource.password=XZfWajt2jv
spring.datasource.hikari.max-lifetime=120000
spring.datasource.hikari.maximum-pool-size=5

#h2 DB
#spring.datasource.driver-class-name=org.h2.Driver
#spring.datasource.url=jdbc:h2:mem:testdb?MODE=MYSQL
#spring.datasource.username=sa
#spring.datasource.hikari.max-lifetime=120000
#spring.datasource.hikari.maximum-pool-size=5

#Java Persistamce API (JPA): Using JPA simplifies database access in Java applications by abstracting away much of the low-level JDBC code and providing a more object-oriented and declarative approach to data persistence. It promotes a cleaner, more maintainable design
#automatically generate, update, update-drop, or validate the database schema based on the JPA entity classes
# update will only add new columns (wont modify existing columns), validate will not make any changes, create-drop will delete all tables after app shuts down
#Batch fetching is a performance optimization technique where multiple entities are loaded in a single query instead of one query per entity
#order_inserts is beneficial as more efficient insertion, no need to index update
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.default_batch_fetch_size=100
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_size=10

#logging.level.org.springframework.web: TRACE
#TRACE, DEBUG, INFO(default), WARN, and ERROR

decorator.datasource.p6spy.enable-logging=true